# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-05-12 21:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='images/Area')),
            ],
        ),
        migrations.CreateModel(
            name='Bar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Bar', 'Bar'), ('Pub', 'Pub')], default='Bar', max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=5000)),
                ('image1', models.ImageField(blank=True, upload_to='images/Bar')),
                ('image2', models.ImageField(blank=True, upload_to='images/Bar')),
                ('image3', models.ImageField(blank=True, upload_to='images/Bar')),
                ('status', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(max_length=200)),
                ('price', models.CharField(blank=True, default='$$$', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('facebook', models.CharField(blank=True, max_length=50)),
                ('wifi', models.CharField(blank=True, default='-', max_length=10)),
                ('googlemap', models.CharField(blank=True, max_length=1000)),
                ('promotion', models.CharField(blank=True, max_length=200)),
                ('happyhours', models.CharField(blank=True, max_length=200)),
                ('booking', models.IntegerField(default=30)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DrunkMe.Area')),
            ],
        ),
        migrations.CreateModel(
            name='Drink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('Wine', (('whitewine', 'White Wine'), ('redwine', 'Red Wine'), ('rosewine', 'Rose Wine'), ('dessertwine', 'Dessert Wine'), ('sparkling', 'Sparkling Wine'))), ('Spirits', (('whisly', 'Whisky'), ('gin', 'Gin'), ('brandy', 'Bbrandy'), ('tequila', 'Ttequila'), ('liqueur', 'Liqueur'), ('rum', 'Rum'), ('aperitif', 'Aperitif'))), ('Beer', (('ale', 'Ale'), ('lager', 'Lager'), ('ipa', 'Ipa'), ('stouts', 'Stouts'), ('blondes', 'Blondes'), ('paleales', 'Pale Ales'), ('wheatbeer', 'Wheat Beer'), ('aleandporters', 'Ale and Porters'), ('whisky:bourbonbarrel-agedstouts', 'Whisky:Bourbon Barrel-Aged Stouts'), ('redales:ambers', 'Red Ales:Ambers'), ('ryesandpumpkinales', 'Ryes and pumpkin Ales'), ('pilsners', 'Pilsners'), ('amberlager', 'Amber Lager'), ('bock', 'Bock'), ('dunkel', 'Dunkel'), ('schwarzbier', 'Schwarzbier')))], max_length=100)),
                ('image', models.ImageField(upload_to='images/Drink')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userID', models.CharField(max_length=50, null=True)),
                ('userPassword', models.CharField(max_length=50, null=True)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(blank=True, max_length=50)),
                ('address', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('point', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, upload_to='images/user')),
            ],
        ),
    ]
